{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\n\n// const Cart = () => {\n//     const [totalPrice, setTotalPrice] = useState(0);\n//     const carts = useSelector(state => state.cartReducer.carts);\n//     const dispatch = useDispatch();\n\n//     const handleRemoveFromCart = (id) => {\n//         dispatch(removeFromCart(id));\n//     };\n\n//     const handleUpdateCartQuantity = (item, quantity) => {\n//         dispatch(updateCartQuantity(item, quantity));\n//     };\n\n//     useEffect(() => {\n//         let total = 0;\n//         carts.forEach(item => {\n//             if (item.price && item.quantity) {\n//                 total += (item.price * item.quantity);\n//             }\n//         });\n//         setTotalPrice(total);\n//     }, [carts]);\n\n//     return (\n//         <div>\n//             <h2>Shopping Cart</h2>\n//             {carts.length === 0 ? (\n//                 <p>Your cart is empty</p>\n//             ) : (\n//                 <div>\n//                     {carts.map(item => (\n//                         <div key={item.isbn}>\n//                             <p>{item.title} - ${item.price}</p>\n//                             <p>Quantity: {item.quantity}</p>\n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\n//                             <input\n//                                 type=\"number\"\n//                                 value={item.quantity}\n//                                 onChange={(e) => handleUpdateCartQuantity(item, parseInt(e.target.value))}\n//                             />\n//                         </div>\n//                     ))}\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice}</p>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Cart;","map":{"version":3,"names":[],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/components/CartComponent/CartComponent.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\r\n\r\n// const Cart = () => {\r\n//     const [totalPrice, setTotalPrice] = useState(0);\r\n//     const carts = useSelector(state => state.cartReducer.carts);\r\n//     const dispatch = useDispatch();\r\n\r\n//     const handleRemoveFromCart = (id) => {\r\n//         dispatch(removeFromCart(id));\r\n//     };\r\n\r\n//     const handleUpdateCartQuantity = (item, quantity) => {\r\n//         dispatch(updateCartQuantity(item, quantity));\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         let total = 0;\r\n//         carts.forEach(item => {\r\n//             if (item.price && item.quantity) {\r\n//                 total += (item.price * item.quantity);\r\n//             }\r\n//         });\r\n//         setTotalPrice(total);\r\n//     }, [carts]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Shopping Cart</h2>\r\n//             {carts.length === 0 ? (\r\n//                 <p>Your cart is empty</p>\r\n//             ) : (\r\n//                 <div>\r\n//                     {carts.map(item => (\r\n//                         <div key={item.isbn}>\r\n//                             <p>{item.title} - ${item.price}</p>\r\n//                             <p>Quantity: {item.quantity}</p>\r\n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\r\n//                             <input\r\n//                                 type=\"number\"\r\n//                                 value={item.quantity}\r\n//                                 onChange={(e) => handleUpdateCartQuantity(item, parseInt(e.target.value))}\r\n//                             />\r\n//                         </div>\r\n//                     ))}\r\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice}</p>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Cart;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}