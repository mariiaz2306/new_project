{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariiia\\\\Desktop\\\\react-ecomm-main\\\\src\\\\components\\\\BookSearch.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// // import {\n// //   searchBooksRequest,\n// //   searchBooksSuccess,\n// //   searchBooksFailure,\n// // } from './redux/actions';\n// import axios from 'axios';\n// import { searchBooksFailure, searchBooksRequest, searchBooksSuccess,  } from '../redux/actions/action';\n\n// const BookSearch = () => {\n//   const dispatch = useDispatch();\n//   const { searchResults, loading, error } = useSelector((state) => state.search);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   const handleSearch = async (title) => {\n//     const url = `http://127.0.0.1:8080/search?query=${title}`;\n//     console.log('Search URL:', url);\n\n//     dispatch(searchBooksRequest());\n\n//     try {\n//       const response = await axios.get(url);\n//       const books = response.data.map((bookString) => JSON.parse(bookString));\n//       dispatch(searchBooksSuccess(books));\n//     } catch (error) {\n//       dispatch(searchBooksFailure(error.message));\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     handleSearch(searchTerm);\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={searchTerm}\n//           onChange={handleChange}\n//           placeholder=\"Поиск по названию книги...\"\n//         />\n//         <button type=\"submit\">Искать</button>\n//       </form>\n\n//       {loading && <p>Loading...</p>}\n//       {error && <p>Ошибка: {error}</p>}\n\n//       <div className=\"book-container\">\n//         {searchResults.map((book) => (\n//           <div key={book.isbn} className=\"book\">\n//             <img\n//               src={`http://127.0.0.1:8080/images/${book.image_name}`}\n//               alt={book.title}\n//             />\n//             <div>\n//               <h3>{book.title}</h3>\n//               <p><strong>Автор:</strong> {book.author}</p>\n//               <p><strong>Категория:</strong> {book.category}</p>\n//               <p><strong>Страницы:</strong> {book.pages}</p>\n//               <p><strong>ISBN:</strong> {book.isbn}</p>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookSearch;\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchBooksRequest } from '../redux/actions/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const dispatch = useDispatch();\n  const searchResults = useSelector(state => state.searchResults);\n  const handleInputChange = e => {\n    const {\n      value\n    } = e.target;\n    setSearchTerm(value);\n    dispatch(searchBooksRequest(value)); // Отправляем запрос на сервер при изменении ввода\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleInputChange,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043D\\u0438\\u0433\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.image,\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"9XEi2IT8aSGmqqVdqF5XEaI268o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","searchBooksRequest","SearchPage","searchTerm","setSearchTerm","dispatch","searchResults","state","handleInputChange","e","value","target","length","map","book","image","title","description","id"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/components/BookSearch.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// // import {\r\n// //   searchBooksRequest,\r\n// //   searchBooksSuccess,\r\n// //   searchBooksFailure,\r\n// // } from './redux/actions';\r\n// import axios from 'axios';\r\n// import { searchBooksFailure, searchBooksRequest, searchBooksSuccess,  } from '../redux/actions/action';\r\n\r\n\r\n\r\n// const BookSearch = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { searchResults, loading, error } = useSelector((state) => state.search);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   const handleSearch = async (title) => {\r\n//     const url = `http://127.0.0.1:8080/search?query=${title}`;\r\n//     console.log('Search URL:', url);\r\n  \r\n//     dispatch(searchBooksRequest());\r\n  \r\n//     try {\r\n//       const response = await axios.get(url);\r\n//       const books = response.data.map((bookString) => JSON.parse(bookString));\r\n//       dispatch(searchBooksSuccess(books));\r\n//     } catch (error) {\r\n//       dispatch(searchBooksFailure(error.message));\r\n//     }\r\n//   };\r\n  \r\n//   const handleChange = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     handleSearch(searchTerm);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={searchTerm}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Поиск по названию книги...\"\r\n//         />\r\n//         <button type=\"submit\">Искать</button>\r\n//       </form>\r\n\r\n//       {loading && <p>Loading...</p>}\r\n//       {error && <p>Ошибка: {error}</p>}\r\n\r\n//       <div className=\"book-container\">\r\n//         {searchResults.map((book) => (\r\n//           <div key={book.isbn} className=\"book\">\r\n//             <img\r\n//               src={`http://127.0.0.1:8080/images/${book.image_name}`}\r\n//               alt={book.title}\r\n//             />\r\n//             <div>\r\n//               <h3>{book.title}</h3>\r\n//               <p><strong>Автор:</strong> {book.author}</p>\r\n//               <p><strong>Категория:</strong> {book.category}</p>\r\n//               <p><strong>Страницы:</strong> {book.pages}</p>\r\n//               <p><strong>ISBN:</strong> {book.isbn}</p>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookSearch;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { searchBooksRequest } from '../redux/actions/action';\r\n\r\n\r\nconst SearchPage = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const dispatch = useDispatch();\r\n  const searchResults = useSelector(state => state.searchResults);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.target;\r\n    setSearchTerm(value);\r\n    dispatch(searchBooksRequest(value)); // Отправляем запрос на сервер при изменении ввода\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Введите название книги\"\r\n      />\r\n      {searchResults.length > 0 ? (\r\n        <ul>\r\n          {searchResults.map(book => (\r\n            <li key={book.id}>\r\n              <img src={book.image} alt={book.title} />\r\n              <h3>{book.title}</h3>\r\n              <p>{book.description}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>Нет результатов</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,yBAAyB;AAAC;AAG7D,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,aAAa,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,aAAa,CAAC;EAE/D,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1BP,aAAa,CAACM,KAAK,CAAC;IACpBL,QAAQ,CAACJ,kBAAkB,CAACS,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEP,UAAW;MAClB,QAAQ,EAAEK,iBAAkB;MAC5B,WAAW,EAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QACpC,EACDF,aAAa,CAACM,MAAM,GAAG,CAAC,gBACvB;MAAA,UACGN,aAAa,CAACO,GAAG,CAACC,IAAI,iBACrB;QAAA,wBACE;UAAK,GAAG,EAAEA,IAAI,CAACC,KAAM;UAAC,GAAG,EAAED,IAAI,CAACE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACzC;UAAA,UAAKF,IAAI,CAACE;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eACrB;UAAA,UAAIF,IAAI,CAACG;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAHlBH,IAAI,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAKjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,gBAEL;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAlCIhB,UAAU;EAAA,QAEGH,WAAW,EACNC,WAAW;AAAA;AAAA,KAH7BE,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}