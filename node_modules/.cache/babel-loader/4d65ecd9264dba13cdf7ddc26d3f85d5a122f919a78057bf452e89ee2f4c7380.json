{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nconst Banner = () => {\n  \"use strict\";\n\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 800;\n    canvas.height = 400;\n    window.addEventListener(\"load\", function () {\n      const bannerWidth = 1200;\n      const bannerHeight = 1000;\n      const initSpeed = 1;\n      const rMin = 1;\n      const rMax = 10;\n      let canv, ctx;\n      let maxx, maxy; // canvas sizes (in pixels)\n      let particles;\n      let click;\n      let initDir;\n      let noiseInitDir;\n      let mouse = {\n        x: 0,\n        y: 0\n      };\n      let org = {\n        x: 0,\n        y: 0\n      };\n      let mouseMoved = false;\n      let hue;\n      // shortcuts for Math.â€¦\n\n      const mrandom = Math.random;\n      const mfloor = Math.floor;\n      const mround = Math.round;\n      const mceil = Math.ceil;\n      const mabs = Math.abs;\n      const mmin = Math.min;\n      const mmax = Math.max;\n      const mPI = Math.PI;\n      const mPIS2 = Math.PI / 2;\n      const m2PI = Math.PI * 2;\n      const msin = Math.sin;\n      const mcos = Math.cos;\n      const matan2 = Math.atan2;\n      const mhypot = Math.hypot;\n      const msqrt = Math.sqrt;\n      const rac3 = msqrt(3);\n      const rac3s2 = rac3 / 2;\n      const mPIS3 = Math.PI / 3;\n\n      //-----------------------------------------------------------------------------\n      // miscellaneous functions\n      //-----------------------------------------------------------------------------\n\n      function alea(min, max) {\n        // random number [min..max[ . If no max is provided, [0..min[\n\n        if (typeof max == 'undefined') return min * mrandom();\n        return min + (max - min) * mrandom();\n      }\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      function intAlea(min, max) {\n        // random integer number [min..max[ . If no max is provided, [0..min[\n\n        if (typeof max == 'undefined') {\n          max = min;\n          min = 0;\n        }\n        return mfloor(min + (max - min) * mrandom());\n      } // intAlea\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      function NoiseGen(rndFunc, period, nbHarmonics, attenHarmonics) {\n        let lowValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        let highValue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n        let arP0 = []; // 'preceeding value' for each harmonic\n        let arP1 = []; // 'succeding value'\n        let amplitudes = []; // amplitudes oh harmonics\n        let increments = []; // n / period, wich will be added to phases for every point\n        let phases = [];\n        let globAmplitude = 0;\n        if (!rndFunc) rndFunc = Math.random; // default value for rndFunc\n        if (nbHarmonics < 1) nbHarmonics = 1;\n        for (let kh = 1; kh <= nbHarmonics; ++kh) {\n          arP0[kh] = rndFunc();\n          arP1[kh] = rndFunc();\n          amplitudes[kh] = kh == 1 ? 1 : amplitudes[kh - 1] * attenHarmonics;\n          globAmplitude += amplitudes[kh];\n          increments[kh] = kh / period;\n          phases[kh] = rndFunc();\n        } // for kh\n\n        /* normalize amplitudes */\n        amplitudes.forEach((value, kh) => amplitudes[kh] = value / globAmplitude * (highValue - lowValue));\n\n        /* returned function here */\n        return function () {\n          let pf, pfl;\n          let signal = 0;\n          for (let kh = nbHarmonics; kh >= 1; --kh) {\n            pf = phases[kh] += increments[kh];\n            if (phases[kh] >= 1) {\n              pf = phases[kh] -= 1;\n              arP0[kh] = arP1[kh];\n              arP1[kh] = rndFunc();\n            } // if full period reached\n            pfl = pf * pf * (3 - 2 * pf); // always 0..1, but smoother\n            signal += (arP0[kh] * (1 - pfl) + arP1[kh] * pfl) * amplitudes[kh];\n          } // for kh\n          return signal + lowValue;\n        }; // returned function\n      } // NoiseGen\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      /* returns intermediate point between p0 and p1,\r\n        alpha = 0 will return p0, alpha = 1 will return p1\r\n        values of alpha outside [0,1] may be used to compute points outside the p0-p1 segment\r\n      */\n      function intermediate(p0, p1, alpha) {\n        return [(1 - alpha) * p0[0] + alpha * p1[0], (1 - alpha) * p0[1] + alpha * p1[1]];\n      } // function intermediate\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      function distance(p0, p1) {\n        /* distance between points */\n\n        return mhypot(p0[0] - p1[0], p0[1] - p1[1]);\n      } // function distance\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      function randomElement(array) {\n        return array[intAlea(array.length)];\n      } // randomElement\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      function removeElement(array, element) {\n        let idx = array.indexOf(element);\n        if (idx == -1) throw 'Bug ! indexOf -1 in removeElement';\n        array.splice(idx, 1);\n      } // removeElement\n\n      //-----------------------------------------------------------------------------\n      function clonePoint(p) {\n        return [p[0], p[1]];\n      }\n\n      //-----------------------------------------------------------------------------\n      function Particle() {\n        this.x = org.x;\n        this.y = org.y;\n        //  this.dir = initDir + alea(-mPI / 10, mPI / 10);\n        this.dir = alea(m2PI);\n        this.speed = initSpeed * alea(0.8, 1.4);\n        this.genddir = NoiseGen(null, 100, 2, 0.8, -0.03, 0.03);\n        this.r = rMin;\n\n        //  this.color1 = `hsl(${intAlea(360)},100%,50%)`;\n        this.color1 = `hsl(${hue}, 100%, ${alea(20, 80)}%)`;\n        hue = (hue + intAlea(-5, 5)) % 360;\n      }\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n      Particle.prototype.move = function () {\n        this.dir = (this.dir + this.genddir()) % m2PI;\n        this.speed += 0.01;\n        this.r = mmin(this.r + 0.1, rMax);\n        this.x += this.speed * mcos(this.dir);\n        this.y += this.speed * msin(this.dir);\n        if (this.y < -this.r || this.y > maxy + this.r || this.x < -this.r || this.x > maxx + this.r) return false;\n        return true;\n      };\n      Particle.prototype.draw = function () {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.r, 0, m2PI);\n        ctx.fillStyle = this.color1;\n        ctx.fill();\n      };\n      function startOver() {\n        maxx = bannerWidth;\n        maxy = bannerHeight;\n        if (maxx < 10) return false;\n        canv.style.left = (window.innerWidth - maxx) / 2 + 'px';\n        canv.style.top = (window.innerHeight - maxy) / 2 + 'px';\n        ctx.canvas.width = bannerWidth;\n        ctx.canvas.height = bannerHeight;\n        ctx.lineJoin = 'round'; // placed here because reset when canvas resized\n        noiseInitDir = NoiseGen(null, 200, 0, 0, -0.03, 0.03);\n        hue = intAlea(360);\n        if (org.x == 0 && org.y == 0) org = {\n          x: maxx / 2,\n          y: maxy / 2\n        };\n        mouse = {\n          x: maxx / 2,\n          y: maxy / 2\n        };\n        particles = [];\n        initDir = alea(m2PI);\n        return true; // ok\n      } // startOver\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      function mouseMove(event) {\n        mouse.x = event.clientX;\n        mouse.y = event.clientY;\n        mouseMoved = true;\n      } // mouseMove\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      function mouseClick(event) {\n        org.x = event.clientX;\n        org.y = event.clientY;\n        click = true;\n      } // mouseMove\n\n      // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n      let animate;\n      {\n        // scope for animate\n\n        let still = 0;\n        let tStampPre = 0;\n        animate = function (tStamp) {\n          if (tStampPre == 0) tStampPre = tStamp;\n          if (click && startOver()) click = false;\n          if (particles) {\n            // move origin point\n\n            if (mouseMoved) {\n              still = 1000; // moving : restart chronometer\n              mouseMoved = false;\n            }\n            if (still > 0) {\n              still += tStampPre - tStamp;\n              if (still <= 0) {// does not move : take mouse position\n                //        org = {x: mouse.x, y: mouse.y}; no, not really interesting\n              }\n            }\n            tStampPre = tStamp;\n            initDir += noiseInitDir();\n            initDir %= m2PI;\n            ctx.fillStyle = 'rgba(0,0,0,0.03)';\n            ctx.fillRect(0, 0, maxx, maxy);\n            if (particles.length < 300) {\n              particles.push(new Particle());\n            }\n            particles.forEach((part, k) => {\n              if (part.move() == false) {\n                removeElement(particles, part);\n              } else part.draw();\n            });\n          }\n          window.requestAnimationFrame(animate);\n        }; // animate\n      } // scope for animate\n      //------------------------------------------------------------------------\n      //------------------------------------------------------------------------\n      // beginning of execution\n\n      {\n        canv = document.createElement('canvas');\n        canv.style.position = \"absolute\";\n        document.body.appendChild(canv);\n        ctx = canv.getContext('2d');\n      } // canvas creation\n\n      window.addEventListener('click', mouseClick);\n      window.requestAnimationFrame(animate);\n      canv.addEventListener('mousemove', mouseMove);\n      click = true; // to run startOver\n    }); // window load listener\n  }, []);\n};\n_s(Banner, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useRef","Banner","canvasRef","canvas","current","ctx","getContext","width","height","window","addEventListener","bannerWidth","bannerHeight","initSpeed","rMin","rMax","canv","maxx","maxy","particles","click","initDir","noiseInitDir","mouse","x","y","org","mouseMoved","hue","mrandom","Math","random","mfloor","floor","mround","round","mceil","ceil","mabs","abs","mmin","min","mmax","max","mPI","PI","mPIS2","m2PI","msin","sin","mcos","cos","matan2","atan2","mhypot","hypot","msqrt","sqrt","rac3","rac3s2","mPIS3","alea","intAlea","NoiseGen","rndFunc","period","nbHarmonics","attenHarmonics","lowValue","highValue","arP0","arP1","amplitudes","increments","phases","globAmplitude","kh","forEach","value","pf","pfl","signal","intermediate","p0","p1","alpha","distance","randomElement","array","length","removeElement","element","idx","indexOf","splice","clonePoint","p","Particle","dir","speed","genddir","r","color1","prototype","move","draw","beginPath","arc","fillStyle","fill","startOver","style","left","innerWidth","top","innerHeight","lineJoin","mouseMove","event","clientX","clientY","mouseClick","animate","still","tStampPre","tStamp","fillRect","push","part","k","requestAnimationFrame","document","createElement","position","body","appendChild"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/components/Banner/Banner.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\n\r\nconst Banner = () => {\r\n  \"use strict\";\r\n  \r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n\r\nwindow.addEventListener(\"load\",function() {\r\n\r\n  const bannerWidth = 1200;\r\n  const bannerHeight = 1000;\r\n  const initSpeed = 1;\r\n  const rMin = 1;\r\n  const rMax = 10;\r\n  let canv, ctx;   \r\n  let maxx, maxy;  // canvas sizes (in pixels)\r\n  let particles;\r\n  let click;\r\n  let initDir;\r\n  let noiseInitDir;\r\n  let mouse = {x: 0, y: 0};\r\n  let org = {x: 0, y: 0};\r\n  let mouseMoved = false;\r\n  let hue;\r\n// shortcuts for Math.â€¦\r\n\r\n  const mrandom = Math.random;\r\n  const mfloor = Math.floor;\r\n  const mround = Math.round;\r\n  const mceil = Math.ceil;\r\n  const mabs = Math.abs;\r\n  const mmin = Math.min;\r\n  const mmax = Math.max;\r\n\r\n  const mPI = Math.PI;\r\n  const mPIS2 = Math.PI / 2;\r\n  const m2PI = Math.PI * 2;\r\n  const msin = Math.sin;\r\n  const mcos = Math.cos;\r\n  const matan2 = Math.atan2;\r\n\r\n  const mhypot = Math.hypot;\r\n  const msqrt = Math.sqrt;\r\n\r\n  const rac3   = msqrt(3);\r\n  const rac3s2 = rac3 / 2;\r\n  const mPIS3 = Math.PI / 3;\r\n\r\n//-----------------------------------------------------------------------------\r\n// miscellaneous functions\r\n//-----------------------------------------------------------------------------\r\n\r\n  function alea (min, max) {\r\n// random number [min..max[ . If no max is provided, [0..min[\r\n\r\n    if (typeof max == 'undefined') return min * mrandom();\r\n    return min + (max - min) * mrandom();\r\n  }\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n  function intAlea (min, max) {\r\n// random integer number [min..max[ . If no max is provided, [0..min[\r\n\r\n    if (typeof max == 'undefined') {\r\n      max = min; min = 0;\r\n    }\r\n    return mfloor(min + (max - min) * mrandom());\r\n  } // intAlea\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  function NoiseGen(rndFunc, period, nbHarmonics, attenHarmonics, lowValue = 0, highValue = 1) {\r\n\r\n\r\n\r\n  let arP0 = [];  // 'preceeding value' for each harmonic\r\n  let arP1 = [];  // 'succeding value'\r\n  let amplitudes = []; // amplitudes oh harmonics\r\n  let increments = []; // n / period, wich will be added to phases for every point\r\n  let phases = [];\r\n  let globAmplitude = 0;\r\n  if (!rndFunc) rndFunc = Math.random; // default value for rndFunc\r\n  if (nbHarmonics < 1) nbHarmonics = 1;\r\n\r\n  for (let kh = 1; kh <= nbHarmonics; ++ kh) {\r\n    arP0[kh] = rndFunc();\r\n    arP1[kh] = rndFunc();\r\n    amplitudes[kh] = (kh == 1) ? 1 : (amplitudes[kh - 1] * attenHarmonics);\r\n    globAmplitude += amplitudes[kh];\r\n    increments[kh] = kh / period;\r\n    phases[kh] = rndFunc();\r\n  } // for kh\r\n\r\n/* normalize amplitudes */\r\n  amplitudes.forEach ((value, kh) => amplitudes[kh] = value / globAmplitude * (highValue - lowValue))\r\n\r\n/* returned function here */\r\n  return function () {\r\n    let pf, pfl;\r\n    let signal = 0;\r\n    for (let kh = nbHarmonics; kh >= 1; --kh) {\r\n      pf = phases[kh] += increments[kh];\r\n      if (phases[kh] >= 1) {\r\n        pf = phases[kh] -= 1;\r\n        arP0[kh] = arP1[kh];\r\n        arP1[kh] = rndFunc();\r\n      } // if full period reached\r\n      pfl = pf * pf * (3 - 2 * pf); // always 0..1, but smoother\r\n      signal += (arP0[kh] * (1 - pfl) + arP1[kh] * pfl) * amplitudes[kh];\r\n    } // for kh\r\n    return signal + lowValue;\r\n  } // returned function\r\n  } // NoiseGen\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n/* returns intermediate point between p0 and p1,\r\n  alpha = 0 will return p0, alpha = 1 will return p1\r\n  values of alpha outside [0,1] may be used to compute points outside the p0-p1 segment\r\n*/\r\n  function intermediate (p0, p1, alpha) {\r\n\r\n    return [(1 - alpha) * p0[0] + alpha * p1[0],\r\n            (1 - alpha) * p0[1] + alpha * p1[1]];\r\n  } // function intermediate\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n  function distance (p0, p1) {\r\n\r\n/* distance between points */\r\n\r\n    return mhypot (p0[0] - p1[0], p0[1] - p1[1]);\r\n\r\n  } // function distance\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n  function randomElement(array) {\r\n    return array[intAlea(array.length)];\r\n  } // randomElement\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n  function removeElement(array, element) {\r\n    let idx = array.indexOf(element);\r\n    if (idx == -1) throw ('Bug ! indexOf -1 in removeElement');\r\n    array.splice(idx, 1);\r\n  } // removeElement\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\nfunction clonePoint(p) {\r\n  return [p[0],p[1]];\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\nfunction Particle () {\r\n\r\n  this.x = org.x;\r\n  this.y = org.y;\r\n//  this.dir = initDir + alea(-mPI / 10, mPI / 10);\r\n  this.dir = alea(m2PI);\r\n  this.speed = initSpeed * alea(0.8, 1.4);\r\n\r\n  this.genddir = NoiseGen(null, 100, 2, 0.8, -0.03, 0.03);\r\n\r\n  this.r = rMin;\r\n\r\n//  this.color1 = `hsl(${intAlea(360)},100%,50%)`;\r\n  this.color1 = `hsl(${hue}, 100%, ${alea(20,80)}%)`;\r\n  hue = (hue + intAlea( -5, 5)) % 360;\r\n\r\n} \r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\nParticle.prototype.move = function () {\r\n\r\n  this.dir = (this.dir + this.genddir()) % m2PI;\r\n  this.speed += 0.01;\r\n\r\n  this.r = mmin(this.r + 0.1,  rMax);\r\n  this.x += this.speed * mcos(this.dir);\r\n  this.y += this.speed * msin(this.dir);\r\n\r\n  if (this.y < -this.r || this.y > maxy + this.r || this.x < -this.r || this.x > maxx + this.r) return false;\r\n\r\n  return true;\r\n} \r\n\r\nParticle.prototype.draw = function () {\r\n\r\n  ctx.beginPath();\r\n  ctx.arc(this.x, this.y,this.r,0,m2PI);\r\n  ctx.fillStyle = this.color1;\r\n  ctx.fill();\r\n\r\n} \r\nfunction startOver() {\r\n\r\n\r\n\r\nmaxx = bannerWidth;\r\nmaxy = bannerHeight;\r\n\r\n  if (maxx < 10) return false;\r\n\r\n  canv.style.left = ((window.innerWidth ) - maxx) / 2 + 'px';\r\n  canv.style.top = ((window.innerHeight ) - maxy) / 2 + 'px';\r\n\r\n  ctx.canvas.width = bannerWidth;\r\n  ctx.canvas.height = bannerHeight;\r\n  ctx.lineJoin = 'round';   // placed here because reset when canvas resized\r\n  noiseInitDir = NoiseGen(null, 200,0,0,-0.03,0.03);\r\n  hue = intAlea(360);\r\n  if (org.x == 0 && org.y == 0)\r\n    org = {x: maxx / 2, y: maxy / 2};\r\n  mouse = {x: maxx / 2, y: maxy / 2};\r\n  particles = [];\r\n\r\n  initDir = alea(m2PI);\r\n\r\n  return true; // ok\r\n\r\n} // startOver\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nfunction mouseMove(event) {\r\n  mouse.x = event.clientX;\r\n  mouse.y = event.clientY;\r\n  mouseMoved = true;\r\n} // mouseMove\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nfunction mouseClick(event) {\r\n  org.x = event.clientX;\r\n  org.y = event.clientY;\r\n  click = true;\r\n} // mouseMove\r\n\r\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\nlet animate;\r\n{ // scope for animate\r\n\r\nlet still = 0;\r\nlet tStampPre = 0;\r\n\r\nanimate = function (tStamp) {\r\n\r\n  if (tStampPre == 0) tStampPre = tStamp;\r\n\r\n  if (click && startOver()) click = false;\r\n  if (particles) {\r\n\r\n// move origin point\r\n\r\n    if (mouseMoved) {\r\n      still = 1000; // moving : restart chronometer\r\n      mouseMoved = false;\r\n    }\r\n\r\n    if (still > 0) {\r\n      still += tStampPre - tStamp;\r\n      if (still <= 0) { // does not move : take mouse position\r\n//        org = {x: mouse.x, y: mouse.y}; no, not really interesting\r\n      }\r\n    }\r\n    tStampPre = tStamp;\r\n\r\n    initDir += noiseInitDir();\r\n    initDir %= m2PI;\r\n    ctx.fillStyle = 'rgba(0,0,0,0.03)';\r\n    ctx.fillRect(0, 0, maxx, maxy);\r\n    if (particles.length < 300) {\r\n      particles.push(new Particle());\r\n    }\r\n    particles.forEach((part,k) => {\r\n      if (part.move() == false ) {\r\n        removeElement(particles, part);\r\n      } else part.draw();\r\n    });\r\n  }\r\n  window.requestAnimationFrame(animate);\r\n\r\n} // animate\r\n} // scope for animate\r\n//------------------------------------------------------------------------\r\n//------------------------------------------------------------------------\r\n// beginning of execution\r\n\r\n  {\r\n    canv = document.createElement('canvas');\r\n    canv.style.position=\"absolute\";\r\n    document.body.appendChild(canv);\r\n    ctx = canv.getContext('2d');\r\n  } // canvas creation\r\n\r\n  window.addEventListener('click',mouseClick);\r\n\r\n  window.requestAnimationFrame(animate);\r\n  canv.addEventListener('mousemove',mouseMove);\r\n  click = true; // to run startOver\r\n\r\n}); // window load listener\r\n}, []);\r\n\r\n}\r\n\r\n\r\nexport default Banner"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}