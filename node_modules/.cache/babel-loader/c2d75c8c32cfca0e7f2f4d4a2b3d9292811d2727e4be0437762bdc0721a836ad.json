{"ast":null,"code":"const INIT_STATE = {\n  carts: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        carts: [...state.carts, action.payload]\n      };\n    case \"REMOVE_TO_CART\":\n      const updatedCarts = state.carts.filter(item => item.isbn !== action.payload);\n      return {\n        ...state,\n        carts: updatedCarts\n      };\n    case \"INCREMENT_ITEM\":\n      return {\n        ...state,\n        carts: state.carts.map(item => {\n          if (item.isbn === action.payload) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        })\n      };\n    case \"DECREMENT_ITEM\":\n      return {\n        ...state,\n        carts: state.carts.map(item => {\n          if (item.isbn === action.payload && item.quantity > 1) {\n            return {\n              ...item,\n              quantity: item.quantity - 1\n            };\n          }\n          return item;\n        })\n      };\n    default:\n      return state;\n  }\n};\n// const INIT_STATE = {\n//     carts: []\n// }\n\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state,\n//                 carts: [...state.carts, action.payload]\n//             };\n//         case \"REMOVE_FROM_CART\":\n//             const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n//             return {\n//                 ...state,\n//                 carts: updatedCarts\n//             };\n//         case \"INCREMENT_ITEM\":\n//             return {\n//                 ...state,\n//                 carts: state.carts.map((item) => {\n//                     if (item.isbn === action.payload) {\n//                         return { ...item, quantity: item.quantity + 1 };\n//                     }\n//                     return item;\n//                 })\n//             };\n//         case \"DECREMENT_ITEM\":\n//             return {\n//                 ...state,\n//                 carts: state.carts.map((item) => {\n//                     if (item.isbn === action.payload && item.quantity > 1) {\n//                         return { ...item, quantity: item.quantity - 1 };\n//                     }\n//                     return item;\n//                 })\n//             };\n//         default:\n//             return state;\n//     }\n// };","map":{"version":3,"names":["INIT_STATE","carts","cartReducer","state","action","type","payload","updatedCarts","filter","item","isbn","map","quantity"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/redux/reducer/cartReducer.js"],"sourcesContent":["const INIT_STATE = {\n    carts: []\n}\n\nexport const cartReducer = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case \"ADD_TO_CART\":\n            return {\n                ...state,\n                carts: [...state.carts, action.payload]\n            }\n        case \"REMOVE_TO_CART\":\n            const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n            return {\n                ...state,\n                carts: updatedCarts\n            }\n            case \"INCREMENT_ITEM\":\n                            return {\n                                ...state,\n                                carts: state.carts.map((item) => {\n                                    if (item.isbn === action.payload) {\n                                        return { ...item, quantity: item.quantity + 1 };\n                                    }\n                                    return item;\n                                })\n                            };\n                        case \"DECREMENT_ITEM\":\n                            return {\n                                ...state,\n                                carts: state.carts.map((item) => {\n                                    if (item.isbn === action.payload && item.quantity > 1) {\n                                        return { ...item, quantity: item.quantity - 1 };\n                                    }\n                                    return item;\n                                })\n                            };\n            \n        default:\n            return state;\n    }\n}\n// const INIT_STATE = {\n//     carts: []\n// }\n\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state,\n//                 carts: [...state.carts, action.payload]\n//             };\n//         case \"REMOVE_FROM_CART\":\n//             const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n//             return {\n//                 ...state,\n//                 carts: updatedCarts\n//             };\n//         case \"INCREMENT_ITEM\":\n//             return {\n//                 ...state,\n//                 carts: state.carts.map((item) => {\n//                     if (item.isbn === action.payload) {\n//                         return { ...item, quantity: item.quantity + 1 };\n//                     }\n//                     return item;\n//                 })\n//             };\n//         case \"DECREMENT_ITEM\":\n//             return {\n//                 ...state,\n//                 carts: state.carts.map((item) => {\n//                     if (item.isbn === action.payload && item.quantity > 1) {\n//                         return { ...item, quantity: item.quantity - 1 };\n//                     }\n//                     return item;\n//                 })\n//             };\n//         default:\n//             return state;\n//     }\n// };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG;EACfC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAAGH,UAAU;EAAA,IAAEI,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QACH,GAAGF,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO;MAC1C,CAAC;IACL,KAAK,gBAAgB;MACjB,MAAMC,YAAY,GAAGJ,KAAK,CAACF,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACE,OAAO,CAAC;MAC/E,OAAO;QACH,GAAGH,KAAK;QACRF,KAAK,EAAEM;MACX,CAAC;IACD,KAAK,gBAAgB;MACL,OAAO;QACH,GAAGJ,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACU,GAAG,CAAEF,IAAI,IAAK;UAC7B,IAAIA,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACE,OAAO,EAAE;YAC9B,OAAO;cAAE,GAAGG,IAAI;cAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;YAAE,CAAC;UACnD;UACA,OAAOH,IAAI;QACf,CAAC;MACL,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGN,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACU,GAAG,CAAEF,IAAI,IAAK;UAC7B,IAAIA,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACE,OAAO,IAAIG,IAAI,CAACG,QAAQ,GAAG,CAAC,EAAE;YACnD,OAAO;cAAE,GAAGH,IAAI;cAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;YAAE,CAAC;UACnD;UACA,OAAOH,IAAI;QACf,CAAC;MACL,CAAC;IAErB;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}