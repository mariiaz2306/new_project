{"ast":null,"code":"const INIT_STATE = {\n  carts: []\n};\n\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state,\n//                 carts: [...state.carts, action.payload]\n//             }\n//         case \"REMOVE_TO_CART\":\n//             const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n//             return {\n//                 ...state,\n//                 carts: updatedCarts\n//             }\n//             case \"CART_INCREMENT\":\n//                 const updatedStateIncrement = state.map((item) =>\n//                   item.id === action.payload && item.count !== undefined\n//                     ? { ...item, count: (item.count || 1) + 1 }\n//                     : item\n//                 );\n\n//                 return updatedStateIncrement;\n//               case \"CART_DECREMENT\":\n//                 const updatedStateDecrement = state.map((item) => {\n//                   if (item.id === action.payload) {\n//                     const updatedItem = { ...item };\n//                     updatedItem.count = Math.max((item.count || 1) - 1);\n//                     return updatedItem;\n//                   }\n//                   return item;\n//                 });\n\n//                 return updatedStateDecrement;\n\n//         default:\n//             return state;\n//     }\n// }\n\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return {\n        ...state,\n        carts: [...state.carts, action.payload]\n      };\n    case \"REMOVE_FROM_CART\":\n      const updatedCarts = state.carts.filter(item => item.isbn !== action.payload);\n      return {\n        ...state,\n        carts: updatedCarts\n      };\n    case \"CART_INCREMENT\":\n      return {\n        ...state,\n        carts: state.carts.map(item => item.id === action.payload && item.count !== undefined ? {\n          ...item,\n          count: (item.count || 1) + 1\n        } : item)\n      };\n    case \"CART_DECREMENT\":\n      return {\n        ...state,\n        carts: state.carts.map(item => {\n          if (item.id === action.payload) {\n            const updatedItem = {\n              ...item\n            };\n            updatedItem.count = Math.max((item.count || 1) - 1, 0);\n            return updatedItem;\n          }\n          return item;\n        })\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["INIT_STATE","carts","cartReducer","state","action","type","payload","updatedCarts","filter","item","isbn","map","id","count","undefined","updatedItem","Math","max"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/redux/reducer/cartReducer.js"],"sourcesContent":["const INIT_STATE = {\n    carts: []\n}\n\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state,\n//                 carts: [...state.carts, action.payload]\n//             }\n//         case \"REMOVE_TO_CART\":\n//             const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n//             return {\n//                 ...state,\n//                 carts: updatedCarts\n//             }\n//             case \"CART_INCREMENT\":\n//                 const updatedStateIncrement = state.map((item) =>\n//                   item.id === action.payload && item.count !== undefined\n//                     ? { ...item, count: (item.count || 1) + 1 }\n//                     : item\n//                 );\n         \n//                 return updatedStateIncrement;\n//               case \"CART_DECREMENT\":\n//                 const updatedStateDecrement = state.map((item) => {\n//                   if (item.id === action.payload) {\n//                     const updatedItem = { ...item };\n//                     updatedItem.count = Math.max((item.count || 1) - 1);\n//                     return updatedItem;\n//                   }\n//                   return item;\n//                 });\n       \n//                 return updatedStateDecrement;\n            \n//         default:\n//             return state;\n//     }\n// }\n\nexport const cartReducer = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case \"ADD_TO_CART\":\n            return {\n                ...state,\n                carts: [...state.carts, action.payload]\n            };\n        case \"REMOVE_FROM_CART\": \n            const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n            return {\n                ...state,\n                carts: updatedCarts\n            };\n        case \"CART_INCREMENT\":\n            return {\n                ...state,\n                carts: state.carts.map((item) =>\n                    item.id === action.payload && item.count !== undefined\n                        ? { ...item, count: (item.count || 1) + 1 }\n                        : item\n                )\n            };\n        case \"CART_DECREMENT\":\n            return {\n                ...state,\n                carts: state.carts.map((item) => {\n                    if (item.id === action.payload) {\n                        const updatedItem = { ...item };\n                        updatedItem.count = Math.max((item.count || 1) - 1, 0);\n                        return updatedItem;\n                    }\n                    return item;\n                })\n            };\n        default:\n            return state;\n    }\n};\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG;EACfC,KAAK,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAAGH,UAAU;EAAA,IAAEI,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,aAAa;MACd,OAAO;QACH,GAAGF,KAAK;QACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAEG,MAAM,CAACE,OAAO;MAC1C,CAAC;IACL,KAAK,kBAAkB;MACnB,MAAMC,YAAY,GAAGJ,KAAK,CAACF,KAAK,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKN,MAAM,CAACE,OAAO,CAAC;MAC/E,OAAO;QACH,GAAGH,KAAK;QACRF,KAAK,EAAEM;MACX,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGJ,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACU,GAAG,CAAEF,IAAI,IACxBA,IAAI,CAACG,EAAE,KAAKR,MAAM,CAACE,OAAO,IAAIG,IAAI,CAACI,KAAK,KAAKC,SAAS,GAChD;UAAE,GAAGL,IAAI;UAAEI,KAAK,EAAE,CAACJ,IAAI,CAACI,KAAK,IAAI,CAAC,IAAI;QAAE,CAAC,GACzCJ,IAAI;MAElB,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGN,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACU,GAAG,CAAEF,IAAI,IAAK;UAC7B,IAAIA,IAAI,CAACG,EAAE,KAAKR,MAAM,CAACE,OAAO,EAAE;YAC5B,MAAMS,WAAW,GAAG;cAAE,GAAGN;YAAK,CAAC;YAC/BM,WAAW,CAACF,KAAK,GAAGG,IAAI,CAACC,GAAG,CAAC,CAACR,IAAI,CAACI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACtD,OAAOE,WAAW;UACtB;UACA,OAAON,IAAI;QACf,CAAC;MACL,CAAC;IACL;MACI,OAAON,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}