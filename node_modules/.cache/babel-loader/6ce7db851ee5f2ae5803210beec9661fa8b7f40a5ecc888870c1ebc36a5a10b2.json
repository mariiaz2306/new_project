{"ast":null,"code":"// const INIT_STATE = {\n//     carts: []\n// }\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state, carts: [...state.carts, action.payload]\n//             }\n//     case \"REMOVE_TO_CART\":\n//         const data=state.carts.filter((item)=>item.isbn !== action.payload)\n//         console.log(data);\n//         return{\n//             ...state,\n//             carts:data\n//         }\n\n//         default:\n//             return state;\n//     }\n// }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../actions/action\";\n// const INITIAL_STATE = {\n//     carts: {},\n// }\n// export const cartReducer = (state = INITIAL_STATE, action) => {\n//     const { userId, bookId, quantity } = action.payload; // Деструктуризация userId, bookId, quantity\n\n//     switch (action.type) {\n//       case ADD_TO_CART:\n//         const existingCart = state.carts[userId] || [];\n//         const updatedCartAdd = [\n//           ...existingCart,\n//           { bookId, quantity: 1 }, // Используем bookId и начальное количество\n//         ];\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedCartAdd,\n//           },\n//         };\n\n//       case REMOVE_FROM_CART:\n//         const updatedCartRemove = state.carts[userId].filter(\n//           (item) => item.bookId !== bookId\n//         );\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedCartRemove,\n//           },\n//         };\n\n//       case UPDATE_CART_QUANTITY:\n//         const updatedItems = state.carts[userId].map((item) =>\n//           item.bookId === bookId ? { ...item, quantity } : item\n//         );\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedItems,\n//           },\n//         };\n\n//       default:\n//         return state;\n//     }\n//   };","map":{"version":3,"names":["ADD_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/redux/reducer/cartReducer.js"],"sourcesContent":["// const INIT_STATE = {\n//     carts: []\n// }\n// export const cartReducer = (state = INIT_STATE, action) => {\n//     switch (action.type) {\n//         case \"ADD_TO_CART\":\n//             return {\n//                 ...state, carts: [...state.carts, action.payload]\n//             }\n//     case \"REMOVE_TO_CART\":\n//         const data=state.carts.filter((item)=>item.isbn !== action.payload)\n//         console.log(data);\n//         return{\n//             ...state,\n//             carts:data\n//         }\n\n\n\n    \n//         default:\n//             return state;\n//     }\n// }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../actions/action\";\n// const INITIAL_STATE = {\n//     carts: {},\n// }\n// export const cartReducer = (state = INITIAL_STATE, action) => {\n//     const { userId, bookId, quantity } = action.payload; // Деструктуризация userId, bookId, quantity\n  \n//     switch (action.type) {\n//       case ADD_TO_CART:\n//         const existingCart = state.carts[userId] || [];\n//         const updatedCartAdd = [\n//           ...existingCart,\n//           { bookId, quantity: 1 }, // Используем bookId и начальное количество\n//         ];\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedCartAdd,\n//           },\n//         };\n  \n//       case REMOVE_FROM_CART:\n//         const updatedCartRemove = state.carts[userId].filter(\n//           (item) => item.bookId !== bookId\n//         );\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedCartRemove,\n//           },\n//         };\n  \n//       case UPDATE_CART_QUANTITY:\n//         const updatedItems = state.carts[userId].map((item) =>\n//           item.bookId === bookId ? { ...item, quantity } : item\n//         );\n//         return {\n//           ...state,\n//           carts: {\n//             ...state.carts,\n//             [userId]: updatedItems,\n//           },\n//         };\n  \n//       default:\n//         return state;\n//     }\n//   };\n  \n  \n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,oBAAoB,QAAQ,mBAAmB;AACvF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}