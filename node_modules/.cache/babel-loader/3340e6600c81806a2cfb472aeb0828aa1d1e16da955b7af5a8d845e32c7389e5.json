{"ast":null,"code":"const INIT_STATE = {\n  carts: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      const existingItemIndex = state.carts.findIndex(item => item.isbn === action.payload.isbn);\n      if (existingItemIndex !== -1) {\n        // here is the logic taht if you clicked once onthe product, the quantity will be \n        const updatedCarts = [...state.carts];\n        updatedCarts[existingItemIndex].quantity += 1;\n        return {\n          ...state,\n          carts: updatedCarts\n        };\n      } else {\n        // Если товара еще нет в корзине, добавляем его с количеством 1\n        return {\n          ...state,\n          carts: [...state.carts, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    //{\n    // case \"ADD_TO_CART\":\n    //     return {\n    //         ...state,\n    //         carts: [...state.carts, action.payload]\n    //     };\n    case \"REMOVE_TO_CART\":\n      const updatedCarts = state.carts.filter(item => item.isbn !== action.payload);\n      return {\n        ...state,\n        carts: updatedCarts\n      };\n    case \"CART_INCREMENT\":\n      return {\n        ...state,\n        carts: state.carts.map(item => item.isbn === action.payload && item.quantity !== action.payload ? {\n          ...item,\n          quantity: (item.quantity || 1) + 1\n        } : item)\n      };\n    case \"CART_DECREMENT\":\n      return {\n        ...state,\n        carts: state.carts.map(item => item.isbn === action.payload && item.quantity !== undefined ? {\n          ...item,\n          quantity: Math.max((item.quantity || 1) - 1, 0)\n        } : item)\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["INIT_STATE","carts","cartReducer","state","action","type","existingItemIndex","findIndex","item","isbn","payload","updatedCarts","quantity","filter","map","undefined","Math","max"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/redux/reducer/cartReducer.js"],"sourcesContent":["\n\n\n\nconst INIT_STATE = {\n    carts: []\n};\n\nexport const cartReducer = (state = INIT_STATE, action) => {\n    switch (action.type) {\n    case \"ADD_TO_CART\":\n        const existingItemIndex = state.carts.findIndex(item => item.isbn === action.payload.isbn);\n        if (existingItemIndex !== -1) {\n            // here is the logic taht if you clicked once onthe product, the quantity will be \n            const updatedCarts = [...state.carts];\n            updatedCarts[existingItemIndex].quantity += 1;\n            return {\n                ...state,\n                carts: updatedCarts\n            };\n        } else {\n            // Если товара еще нет в корзине, добавляем его с количеством 1\n            return {\n                ...state,\n                carts: [...state.carts, { ...action.payload, quantity: 1 }]\n            };\n        }\n    //{\n        // case \"ADD_TO_CART\":\n        //     return {\n        //         ...state,\n        //         carts: [...state.carts, action.payload]\n        //     };\n        case \"REMOVE_TO_CART\":\n            const updatedCarts = state.carts.filter((item) => item.isbn !== action.payload);\n            return {\n                ...state,\n                carts: updatedCarts\n            };\n        case \"CART_INCREMENT\":\n            return {\n                ...state,\n                carts: state.carts.map((item) =>\n                    item.isbn === action.payload && item.quantity !== action.payload\n                        ? { ...item, quantity: (item.quantity || 1) + 1 }\n                        : item\n                )\n            };\n        case \"CART_DECREMENT\":\n            return {\n                ...state,\n                carts: state.carts.map((item) =>\n                    item.isbn === action.payload && item.quantity !== undefined\n                        ? { ...item, quantity: Math.max((item.quantity || 1) - 1, 0) }\n                        : item\n                )\n            };\n        default:\n            return state;\n    }\n};\n\n"],"mappings":"AAIA,MAAMA,UAAU,GAAG;EACfC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAAGH,UAAU;EAAA,IAAEI,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IACnB,KAAK,aAAa;MACd,MAAMC,iBAAiB,GAAGH,KAAK,CAACF,KAAK,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKL,MAAM,CAACM,OAAO,CAACD,IAAI,CAAC;MAC1F,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1B;QACA,MAAMK,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACF,KAAK,CAAC;QACrCU,YAAY,CAACL,iBAAiB,CAAC,CAACM,QAAQ,IAAI,CAAC;QAC7C,OAAO;UACH,GAAGT,KAAK;UACRF,KAAK,EAAEU;QACX,CAAC;MACL,CAAC,MAAM;QACH;QACA,OAAO;UACH,GAAGR,KAAK;UACRF,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAE;YAAE,GAAGG,MAAM,CAACM,OAAO;YAAEE,QAAQ,EAAE;UAAE,CAAC;QAC9D,CAAC;MACL;IACJ;IACI;IACA;IACA;IACA;IACA;IACA,KAAK,gBAAgB;MACjB,MAAMD,YAAY,GAAGR,KAAK,CAACF,KAAK,CAACY,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKL,MAAM,CAACM,OAAO,CAAC;MAC/E,OAAO;QACH,GAAGP,KAAK;QACRF,KAAK,EAAEU;MACX,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGR,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACa,GAAG,CAAEN,IAAI,IACxBA,IAAI,CAACC,IAAI,KAAKL,MAAM,CAACM,OAAO,IAAIF,IAAI,CAACI,QAAQ,KAAKR,MAAM,CAACM,OAAO,GAC1D;UAAE,GAAGF,IAAI;UAAEI,QAAQ,EAAE,CAACJ,IAAI,CAACI,QAAQ,IAAI,CAAC,IAAI;QAAE,CAAC,GAC/CJ,IAAI;MAElB,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGL,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACa,GAAG,CAAEN,IAAI,IACxBA,IAAI,CAACC,IAAI,KAAKL,MAAM,CAACM,OAAO,IAAIF,IAAI,CAACI,QAAQ,KAAKG,SAAS,GACrD;UAAE,GAAGP,IAAI;UAAEI,QAAQ,EAAEI,IAAI,CAACC,GAAG,CAAC,CAACT,IAAI,CAACI,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAAE,CAAC,GAC5DJ,IAAI;MAElB,CAAC;IACL;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}