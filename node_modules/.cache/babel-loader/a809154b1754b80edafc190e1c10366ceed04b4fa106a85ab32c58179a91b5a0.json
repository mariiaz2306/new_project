{"ast":null,"code":"const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    userId,\n    bookId,\n    quantity\n  } = action.payload;\n  switch (action.type) {\n    case ADD_TO_CART:\n      const existingCart = state.carts[userId] || [];\n      const updatedCartAdd = [...existingCart, {\n        bookId,\n        quantity: 1\n      } // Начальное количество при добавлении\n      ];\n\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedCartAdd\n        }\n      };\n    case REMOVE_FROM_CART:\n      const updatedCartRemove = state.carts[userId].filter(item => item.bookId !== bookId);\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedCartRemove\n        }\n      };\n    case UPDATE_CART_QUANTITY:\n      const updatedItems = state.carts[userId].map(item => item.bookId === bookId ? {\n        ...item,\n        quantity\n      } : item);\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedItems\n        }\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["cartReducer","state","INITIAL_STATE","action","userId","bookId","quantity","payload","type","ADD_TO_CART","existingCart","carts","updatedCartAdd","REMOVE_FROM_CART","updatedCartRemove","filter","item","UPDATE_CART_QUANTITY","updatedItems","map"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/redux/reducer/cartReducer.js"],"sourcesContent":["const cartReducer = (state = INITIAL_STATE, action) => {\n  const { userId, bookId, quantity } = action.payload;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      const existingCart = state.carts[userId] || [];\n      const updatedCartAdd = [\n        ...existingCart,\n        { bookId, quantity: 1 }, // Начальное количество при добавлении\n      ];\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedCartAdd,\n        },\n      };\n\n    case REMOVE_FROM_CART:\n      const updatedCartRemove = state.carts[userId].filter(\n        (item) => item.bookId !== bookId\n      );\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedCartRemove,\n        },\n      };\n\n    case UPDATE_CART_QUANTITY:\n      const updatedItems = state.carts[userId].map((item) =>\n        item.bookId === bookId ? { ...item, quantity } : item\n      );\n      return {\n        ...state,\n        carts: {\n          ...state.carts,\n          [userId]: updatedItems,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\n\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGC,aAAa;EAAA,IAAEC,MAAM;EAChD,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGH,MAAM,CAACI,OAAO;EAEnD,QAAQJ,MAAM,CAACK,IAAI;IACjB,KAAKC,WAAW;MACd,MAAMC,YAAY,GAAGT,KAAK,CAACU,KAAK,CAACP,MAAM,CAAC,IAAI,EAAE;MAC9C,MAAMQ,cAAc,GAAG,CACrB,GAAGF,YAAY,EACf;QAAEL,MAAM;QAAEC,QAAQ,EAAE;MAAE,CAAC,CAAE;MAAA,CAC1B;;MACD,OAAO;QACL,GAAGL,KAAK;QACRU,KAAK,EAAE;UACL,GAAGV,KAAK,CAACU,KAAK;UACd,CAACP,MAAM,GAAGQ;QACZ;MACF,CAAC;IAEH,KAAKC,gBAAgB;MACnB,MAAMC,iBAAiB,GAAGb,KAAK,CAACU,KAAK,CAACP,MAAM,CAAC,CAACW,MAAM,CACjDC,IAAI,IAAKA,IAAI,CAACX,MAAM,KAAKA,MAAM,CACjC;MACD,OAAO;QACL,GAAGJ,KAAK;QACRU,KAAK,EAAE;UACL,GAAGV,KAAK,CAACU,KAAK;UACd,CAACP,MAAM,GAAGU;QACZ;MACF,CAAC;IAEH,KAAKG,oBAAoB;MACvB,MAAMC,YAAY,GAAGjB,KAAK,CAACU,KAAK,CAACP,MAAM,CAAC,CAACe,GAAG,CAAEH,IAAI,IAChDA,IAAI,CAACX,MAAM,KAAKA,MAAM,GAAG;QAAE,GAAGW,IAAI;QAAEV;MAAS,CAAC,GAAGU,IAAI,CACtD;MACD,OAAO;QACL,GAAGf,KAAK;QACRU,KAAK,EAAE;UACL,GAAGV,KAAK,CAACU,KAAK;UACd,CAACP,MAAM,GAAGc;QACZ;MACF,CAAC;IAEH;MACE,OAAOjB,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}