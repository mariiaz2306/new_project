{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, incrementCartItem, decrementCartItem } from '../../../redux/actions/action';\n// import CartOrderForm from \"../CartOrderForm/CartOrderForm\"\n// import \"../CartComponent/CartComponent.css\"\n\n// const Cart = () => {\n//     const [totalPrice, setTotalPrice] = useState(0);\n\n//     const carts = useSelector(state => state.cartReducer.carts);\n//     const dispatch = useDispatch();\n\n//     const handleRemoveFromCart = (isbn) => {\n//         dispatch(removeFromCart(isbn));\n//     };\n\n//     const handleIncrementQuantity = (isbn) => {\n//         dispatch(incrementCartItem(isbn));\n//     };\n\n//     const handleDecrementQuantity = (isbn) => {\n//         dispatch(decrementCartItem(isbn));\n//     };\n\n//     useEffect(() => {\n//         let total = 0;\n//         carts.forEach(item => {\n//             if (item.price && item.quantity) {\n//                 total += (item.price * item.quantity);\n//             }\n//         });\n//         setTotalPrice(total);\n//     }, [carts]);\n\n//     return (\n//         <div>\n//             <h2>Shopping Cart</h2>\n//             {carts.length === 0 ? (\n//                 <p>Your cart is empty</p>\n//             ) : (\n//                 <div>\n//                     {carts.map(item => (\n//                         <div key={item.isbn}>\n//                             <p>{item.title} </p>\n//                             <img\n//                 src={`http://127.0.0.1:8080/images/${item.image_name}`}\n//                 alt={item.title}\n//               />\n//                             <p>${item.price}</p>\n//                             <p>Quantity: {item.quantity}</p> \n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\n//                             <button onClick={() => handleDecrementQuantity(item.isbn)}>-</button>\n//                             <button onClick={() => handleIncrementQuantity(item.isbn)}>+</button>\n//                         </div>\n//                     ))}\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice.toFixed(2)}</p>\n//                     <CartOrderForm/>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Cart;\n\n// Cart.js\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeFromCart, incrementCartItem, decrementCartItem } from '../../../redux/actions/action';\nimport CartOrderForm from \"../CartOrderForm/CartOrderForm\";\nimport '../CartComponent/CartComponent.css';","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","removeFromCart","incrementCartItem","decrementCartItem","CartOrderForm"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/components/CartComponent/CartComponent/CartComponent.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, incrementCartItem, decrementCartItem } from '../../../redux/actions/action';\r\n// import CartOrderForm from \"../CartOrderForm/CartOrderForm\"\r\n// import \"../CartComponent/CartComponent.css\"\r\n\r\n// const Cart = () => {\r\n//     const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n//     const carts = useSelector(state => state.cartReducer.carts);\r\n//     const dispatch = useDispatch();\r\n\r\n//     const handleRemoveFromCart = (isbn) => {\r\n//         dispatch(removeFromCart(isbn));\r\n//     };\r\n\r\n//     const handleIncrementQuantity = (isbn) => {\r\n//         dispatch(incrementCartItem(isbn));\r\n//     };\r\n\r\n//     const handleDecrementQuantity = (isbn) => {\r\n//         dispatch(decrementCartItem(isbn));\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         let total = 0;\r\n//         carts.forEach(item => {\r\n//             if (item.price && item.quantity) {\r\n//                 total += (item.price * item.quantity);\r\n//             }\r\n//         });\r\n//         setTotalPrice(total);\r\n//     }, [carts]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Shopping Cart</h2>\r\n//             {carts.length === 0 ? (\r\n//                 <p>Your cart is empty</p>\r\n//             ) : (\r\n//                 <div>\r\n//                     {carts.map(item => (\r\n//                         <div key={item.isbn}>\r\n//                             <p>{item.title} </p>\r\n//                             <img\r\n//                 src={`http://127.0.0.1:8080/images/${item.image_name}`}\r\n//                 alt={item.title}\r\n//               />\r\n//                             <p>${item.price}</p>\r\n//                             <p>Quantity: {item.quantity}</p> \r\n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\r\n//                             <button onClick={() => handleDecrementQuantity(item.isbn)}>-</button>\r\n//                             <button onClick={() => handleIncrementQuantity(item.isbn)}>+</button>\r\n//                         </div>\r\n//                     ))}\r\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice.toFixed(2)}</p>\r\n//                     <CartOrderForm/>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Cart;\r\n\r\n// Cart.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeFromCart, incrementCartItem, decrementCartItem } from '../../../redux/actions/action';\r\nimport CartOrderForm from \"../CartOrderForm/CartOrderForm\";\r\nimport '../CartComponent/CartComponent.css'\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,+BAA+B;AACpG,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAO,oCAAoC"},"metadata":{},"sourceType":"module","externalDependencies":[]}