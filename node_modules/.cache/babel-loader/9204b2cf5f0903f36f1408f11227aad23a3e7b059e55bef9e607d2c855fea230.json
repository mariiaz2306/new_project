{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mariiia\\\\Desktop\\\\react-ecomm-main\\\\src\\\\components\\\\CartComponent\\\\CartComponent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\n\n// const Cart = () => {\n//     const [totalPrice, setTotalPrice] = useState(0);\n//     const carts = useSelector(state => state.cartReducer.carts);\n//     const dispatch = useDispatch();\n\n//     const handleRemoveFromCart = (id) => {\n//         dispatch(removeFromCart(id));\n//     };\n\n//     const handleUpdateCartQuantity = (item, quantity) => {\n//         dispatch(updateCartQuantity(item, quantity));\n//     };\n\n//     useEffect(() => {\n//         let total = 0;\n//         carts.forEach(item => {\n//             if (item.price && item.quantity) {\n//                 total += (item.price * item.quantity);\n//             }\n//         });\n//         setTotalPrice(total);\n//     }, [carts]);\n\n//     return (\n//         <div>\n//             <h2>Shopping Cart</h2>\n//             {carts.length === 0 ? (\n//                 <p>Your cart is empty</p>\n//             ) : (\n//                 <div>\n//                     {carts.map(item => (\n//                         <div key={item.isbn}>\n//                             <p>{item.title} - ${item.price}</p>\n//                             <p>Quantity: {item.quantity}</p>\n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\n//                             <input\n//                                 type=\"number\"\n//                                 value={item.quantity}\n//                                 onChange={(e) => handleUpdateCartQuantity(item, parseInt(e.target.value))}\n//                             />\n//                         </div>\n//                     ))}\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice}</p>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Cart;\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [totalPrice, setTotalPrice] = useState(0);\n  const carts = useSelector(state => state.cartReducer.carts);\n  const dispatch = useDispatch();\n  const handleRemoveFromCart = id => {\n    dispatch(removeFromCart(id));\n  };\n  const handleUpdateCartQuantity = (item, quantity) => {\n    dispatch(updateCartQuantity(item, quantity));\n  };\n  useEffect(() => {\n    let total = 0;\n    carts.forEach(item => {\n      if (item.price && item.quantity) {\n        total += item.price * item.quantity;\n      }\n    });\n    setTotalPrice(total);\n  }, [carts]);\n  const handleIncrement = item => {\n    const newQuantity = item.quantity + 1;\n    handleUpdateCartQuantity(item, newQuantity);\n  };\n  const handleDecrement = item => {\n    const newQuantity = item.quantity > 1 ? item.quantity - 1 : 1;\n    handleUpdateCartQuantity(item, newQuantity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), carts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [carts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.title, \" - $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDecrement(item),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), item.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleIncrement(item),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFromCart(item.isbn),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)]\n      }, item.isbn, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Price: $\", isNaN(totalPrice) ? 0 : totalPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"nMR1OefFzAwJ3j1dEGzKXzscXzM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","removeFromCart","updateCartQuantity","Cart","totalPrice","setTotalPrice","carts","state","cartReducer","dispatch","handleRemoveFromCart","id","handleUpdateCartQuantity","item","quantity","total","forEach","price","handleIncrement","newQuantity","handleDecrement","length","map","title","isbn","isNaN"],"sources":["C:/Users/Mariiia/Desktop/react-ecomm-main/src/components/CartComponent/CartComponent.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useSelector, useDispatch } from 'react-redux';\r\n// import { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\r\n\r\n// const Cart = () => {\r\n//     const [totalPrice, setTotalPrice] = useState(0);\r\n//     const carts = useSelector(state => state.cartReducer.carts);\r\n//     const dispatch = useDispatch();\r\n\r\n//     const handleRemoveFromCart = (id) => {\r\n//         dispatch(removeFromCart(id));\r\n//     };\r\n\r\n//     const handleUpdateCartQuantity = (item, quantity) => {\r\n//         dispatch(updateCartQuantity(item, quantity));\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         let total = 0;\r\n//         carts.forEach(item => {\r\n//             if (item.price && item.quantity) {\r\n//                 total += (item.price * item.quantity);\r\n//             }\r\n//         });\r\n//         setTotalPrice(total);\r\n//     }, [carts]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Shopping Cart</h2>\r\n//             {carts.length === 0 ? (\r\n//                 <p>Your cart is empty</p>\r\n//             ) : (\r\n//                 <div>\r\n//                     {carts.map(item => (\r\n//                         <div key={item.isbn}>\r\n//                             <p>{item.title} - ${item.price}</p>\r\n//                             <p>Quantity: {item.quantity}</p>\r\n//                             <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\r\n//                             <input\r\n//                                 type=\"number\"\r\n//                                 value={item.quantity}\r\n//                                 onChange={(e) => handleUpdateCartQuantity(item, parseInt(e.target.value))}\r\n//                             />\r\n//                         </div>\r\n//                     ))}\r\n//                     <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice}</p>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Cart;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeFromCart, updateCartQuantity } from '../../redux/actions/action';\r\n\r\nconst Cart = () => {\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const carts = useSelector(state => state.cartReducer.carts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRemoveFromCart = (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const handleUpdateCartQuantity = (item, quantity) => {\r\n        dispatch(updateCartQuantity(item, quantity));\r\n    };\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        carts.forEach(item => {\r\n            if (item.price && item.quantity) {\r\n                total += (item.price * item.quantity);\r\n            }\r\n        });\r\n        setTotalPrice(total);\r\n    }, [carts]);\r\n\r\n    const handleIncrement = (item) => {\r\n        const newQuantity = item.quantity + 1;\r\n        handleUpdateCartQuantity(item, newQuantity);\r\n    };\r\n\r\n    const handleDecrement = (item) => {\r\n        const newQuantity = item.quantity > 1 ? item.quantity - 1 : 1;\r\n        handleUpdateCartQuantity(item, newQuantity);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Shopping Cart</h2>\r\n            {carts.length === 0 ? (\r\n                <p>Your cart is empty</p>\r\n            ) : (\r\n                <div>\r\n                    {carts.map(item => (\r\n                        <div key={item.isbn}>\r\n                            <p>{item.title} - ${item.price}</p>\r\n                            <p>Quantity: \r\n                                <button onClick={() => handleDecrement(item)}>-</button>\r\n                                {item.quantity}\r\n                                <button onClick={() => handleIncrement(item)}>+</button>\r\n                            </p>\r\n                            <button onClick={() => handleRemoveFromCart(item.isbn)}>Remove</button>\r\n                        </div>\r\n                    ))}\r\n                    <p>Total Price: ${isNaN(totalPrice) ? 0 : totalPrice}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}